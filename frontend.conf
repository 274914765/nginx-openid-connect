# This is the backend application we are protecting with OpenID Connect
upstream my_backend {
    zone my_backend 64k;
    server 127.0.0.1:6801;
}

# Custom log format to include the 'sub' claim in the REMOTE_USER field
log_format main_jwt '$remote_addr $jwt_claim_sub $remote_user [$time_local] "$request" $status '
                    '$body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for" $arg_nonce';

# nginScript functions for code exchange and hashing for secure nonce validation
js_include openid_connect.js;
js_set $requestid_hash hashRequestId;
js_set $nonce_hash hashClientNonce;
js_set $auth_token get_auth_token;

# The frontend server - reverse proxy with OpenID Connect authentication
#
server {
    include openid_connect.server_conf; # Authorization code flow and Relying Party processing

    # CA Single Sign-On (SiteMinder)
    #set $oidc_authz_endpoint  "https://stowe.example.com:7443/affwebservices/CASSO/oidc/authorize";
    #set $oidc_token_endpoint  "https://stowe.example.com:7443/affwebservices/CASSO/oidc/token";
    #set $oidc_client          "00040f9b-3747-1a28-b18b-34aaac105a5a";
    #set $oidc_client_secret   "4QDbO13B4sdWoELS8/uDGqmxQDHK8dU0VLEBXY4cUJI=";

    # Okta
    #set $oidc_authz_endpoint  "https://dev-803756.oktapreview.com/oauth2/v1/authorize";
    #set $oidc_token_endpoint  "https://dev-803756.oktapreview.com/oauth2/v1/token";
    #set $oidc_client          "hhe2ujazRpfSQswrmqmY";
    #set $oidc_client_secret   "Tt97kVZwrlEd25usnws__Wa0F96uyYP3HC5XwaCn";

    # Keycloak
    set $oidc_jwt_keyfile     /etc/nginx/keycloak/keycloak.jwk;
    set $oidc_authz_endpoint  "http://172.16.52.128:8080/auth/realms/master/protocol/openid-connect/auth";
    set $oidc_token_endpoint  "http://172.16.52.128:8080/auth/realms/master/protocol/openid-connect/token";
    set $oidc_client          "backend2";
    set $oidc_client_secret   "46830f3a-2e51-4b13-b559-27631b7e3aec";
    set $oidc_token_type      "id_token"; # Session token (access_token or id_token)

    listen 8010;
    listen 7443 ssl;
    server_name thruxton.example.com;
    ssl_certificate      /etc/ssl/certs/thruxton.example.com.crt;
    ssl_certificate_key  /etc/ssl/private/thruxton.example.com.key;
    ssl_session_cache    shared:SSL:1m;
    ssl_session_timeout  5m;
    ssl_ciphers          HIGH;

    location / {
        # This site is protected with OpenID Connect
        auth_jwt "" token=$cookie_auth_token;
        auth_jwt_key_file $oidc_jwt_keyfile;

        # Absent/invalid OpenID Connect token will (re)start auth process
        error_page 401 @oidc_auth;

        # Successfuly authenticated users are proxied to the backend,
        # with username passed as HTTP header
        proxy_set_header username $jwt_claim_email;
        proxy_pass http://my_backend; # The backend site/app
    }
}
